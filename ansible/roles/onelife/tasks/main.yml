- name: install dependencies
  apt:
    name: "{{ packages }}"
  vars:
    packages:
    - git 
    - g++ 
    - imagemagick 
    - xclip 
    - libsdl1.2-dev 
    - libglu1-mesa-dev 
    - libgl1-mesa-dev

- git:
    repo: 'https://github.com/jasonrohrer/minorGems.git'
    dest: /opt/onelife/minorGems
    force: yes

# force yes allow repo to be updated/clone with existance of custom configuration
- git:
    repo: 'https://github.com/jasonrohrer/OneLife.git'
    dest: /opt/onelife/OneLife
    force: yes

- git:
    repo: 'https://github.com/jasonrohrer/OneLifeData7.git'
    dest: /opt/onelife/OneLifeData7
    force: yes

- name: checkout most up to date versions of repositories
  shell: |
     #!/bin/bash

     cd /opt/onelife/minorGems
     git fetch --tags
     latestTaggedVersion=`git for-each-ref --sort=-creatordate --format '%(refname:short)' --count=1 refs/tags/OneLife_v* | sed -e 's/OneLife_v//'`
     git checkout -q OneLife_v$latestTaggedVersion

     cd /opt/onelife/OneLife
     git fetch --tags
     latestTaggedVersionA=`git for-each-ref --sort=-creatordate --format '%(refname:short)' --count=1 refs/tags/OneLife_v* | sed -e 's/OneLife_v//'`
     git checkout -q OneLife_v$latestTaggedVersionA

     cd /opt/onelife/OneLifeData7
     git fetch --tags
     latestTaggedVersionB=`git for-each-ref --sort=-creatordate --format '%(refname:short)' --count=1 refs/tags/OneLife_v* | sed -e 's/OneLife_v//'`
     git checkout -q OneLife_v$latestTaggedVersionB

     rm -f */cache.fcz

- file:
    src: '/opt/onelife/OneLifeData7/{{ item.src }}'
    dest: '/opt/onelife/{{ item.dest }}'
    state: link
  with_items:
    - { src: 'animations', dest: 'animations' }
    - { src: 'categories', dest: 'categories' }
    - { src: 'ground', dest: 'ground' }
    - { src: 'music', dest: 'music' }
    - { src: 'objects', dest: 'objects' }
    - { src: 'sounds', dest: 'sounds' }
    - { src: 'sprites', dest: 'sprites' }
    - { src: 'transitions', dest: 'transitions' }
    - { src: 'dataVersionNumber.txt', dest: 'dataVersionNumber.txt' }

- name: move build script
  copy:
    src: /opt/onelife/OneLife/build/source/runToBuild
    dest: /opt/onelife

- file:
    path: /opt/onelife/runToBuild
    state: touch
    mode: "a+x"

- name: execute build script
  shell: |
     #!/bin/bash

     cd /opt/onelife
     ./runToBuild 1
- name: configure for linux
  shell: |
     #!/bin/bash

     cd /opt/onelife/OneLife/server
     ./configure 1

- name: compile
  shell: | 
     #!/bin/bash

     cd /opt/onelife/OneLife/server
     make

- file:
    src: '/opt/onelife/OneLifeData7/{{ item.src }}'
    dest: '/opt/onelife/OneLife/server/{{ item.dest }}'
    state: link
  with_items:
    - { src: 'objects', dest: 'objects' }
    - { src: 'transitions', dest: 'transitions' }
    - { src: 'categories', dest: 'categories' }

- name: set server to correct version
  shell: |
     #!/bin/bash

     echo $(cat /opt/onelife/dataVersionNumber.txt) > /opt/onelife/OneLife/server/serverCodeVersionNumber.txt

- name: "set requireTicketServerCheck (default: false)"
  shell: |
     #!/bin/bash

     echo "{{ ticket_check }}" > /opt/onelife/OneLife/server/settings/requireTicketServerCheck.ini

- name: "set spawn point (default: fixed)"
  shell: |
     #!/bin/bash

     echo "{{ force_eve_location }}" > /opt/onelife/OneLife/server/settings/forceEveLocation.ini
     echo "{{ eve_x }}" > /opt/onelife/OneLife/server/settings/forceEveLocationX.ini
     echo "{{ eve_y }}" > /opt/onelife/OneLife/server/settings/forceEveLocationY.ini

# allows selected port through firewall
- name: "add ufw exeption for port (default: 8005)"
  ufw:
    rule: allow
    port: "{{ port_number }}"

- name: "set spawn point (default: fixed)"
  shell: |
     #!/bin/bash
     
     echo "{{ port_number }}" > /opt/onelife/OneLife/server/settings/port.ini

- name: "set maximum amount of users (default: 160)"
  shell: |
     #!/bin/bash

     echo "{{ max_users }}" > /opt/onelife/OneLife/server/settings/maxPlayers.ini

- name: "set server password"
  shell: |
     #!/bin/bash
     
     echo "{{ server_password }}" > /opt/onelife/OneLife/server/settings/clientPassword.ini
     echo "1" > /opt/onelife/OneLife/server/settings/requireClientPassword.ini

  when: server_password is defined

- name: reduce hunger speed
  shell: |
     #!/bin/bash

     echo "6.0" > /opt/onelife/OneLife/server/settings/minFoodDecrementSeconds.ini

  when: easy_mode == "yes"

- template:
    src: source/onelife
    dest: /usr/sbin/onelife
    owner: root
    group: root
    mode: 0700

- name: install onelife ansible files
  copy:
    src: ../ansible
    dest: /usr/sbin/onelife_easy_install

- name: install onelife install script
  copy:
    src: ../install
    dest: /usr/sbin/onelife_easy_install/install
    owner: root
    group: root
    mode: 0700

- name: install onelife.desktop file
  copy:
    src: source/onelife.desktop
    dest: /usr/share/applications/onelife.desktop
    owner: root
    group: root
    mode: 0777

- name: install onelife icon
  copy:
    src: source/portraitLeft.jpg
    dest: /opt/onelife/portraitLeft.jpg
    owner: root
    group: root
    mode: 0777

- name: set onelife permissions
  shell: |
     #!/bin/bash

     chmod 777 -R /opt/onelife


- name: ticketing system setup
  block:


     - name: install dependencies
       apt:
         name: "{{ packages }}"
       vars:
         packages:
         - apache2
         - mysql-server
         - php
         - php-mysql
         - python-mysqldb

     - name: import database schema
       mysql_db:
         name: onelife_tickets
         state: import
         target: "{{ ansible_base }}/source/ticketing_system.sql"

     - mysql_user:
         name: "php"
         password: "{{ php_password }}"
         host: '%'
         priv: '*.*:ALL,GRANT'
         state: present
       ignore_errors: yes

     - name: create web root folder
       file: 
         path: "/var/www/html/ticketServer"
         recurse: yes
         state: directory

     - name: install server.php
       copy:
         src: /opt/onelife/minorGems/game/ticketServer/
         dest: /var/www/html/ticketServer/
         owner: root
         group: root
         mode: 0777
     
     - name: set parameters in settings file
       shell: |
         #!/bin/bash

         sed -i "/^\$databaseUsername/c\\\$databaseUsername = \"php\";" /var/www/html/ticketServer/settings.php
         sed -i "/^\$databasePassword/c\\\$databasePassword = \"{{ php_password }}\";" /var/www/html/ticketServer/settings.php
         sed -i "/^\$databaseName/c\\\$databaseName = \"onelife_tickets\";" /var/www/html/ticketServer/settings.php
         sed -i "/^\$fullServerURL/c\\\$fullServerURL = \"http:\/\/localhost\/ticketServer\/server.php\";" /var/www/html/ticketServer/settings.php
         sed -i "/^\$useBulkEmailerForNotes/c\\\$useBulkEmailerForNotes = 0;" /var/www/html/ticketServer/settings.php
         sed -i "/^\$databaseUsername/c\\\$databaseUsername = \"php\";" /var/www/html/ticketServer/settings.php
         sed -i "/^\$accessPasswords/c\\\$accessPasswords = array();" /var/www/html/ticketServer/settings.php
         sed -i '/20e1883a3d63607b60677dca87b41e04316ffc63/d' /var/www/html/ticketServer/settings.php

     - name: set ticket server URL
       shell: |
         #!/bin/bash

         echo "http://localhost/ticketServer/server.php" > /opt/onelife/OneLife/server/settings/ticketServerURL.ini

     - name: "add ufw exeption for port 80"
       ufw:
         rule: allow
         port: 80


  when: ticketing_system == 'yes' 

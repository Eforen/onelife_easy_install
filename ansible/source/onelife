#!/bin/bash


# make sure user is root
if [[ $EUID -ne 0 ]]; then
        echo "This script must be run as root."
        exit 1
fi

if [[ -z "${1}" ]]; then
	echo ''
	echo "Please refer to --help."
	echo ''
fi

if [[ ${1} == "start" ]]; then
	cd /opt/onelife/OneLife/server/
	/opt/onelife/OneLife/server/OneLifeServer
elif [[ ${1} == "--help" ]]; then

	echo ''
	echo "This is a command line utility for managing the one hour one life server."
	echo ''
	echo "Usage:"
	echo ''
	echo "	onelife set-version <version_number>:"
        echo "		Sets the version for the server. This must match the" 
	echo "		version that the client is running. The client's"
	echo "		version number can be found in the dataVersionNumber.txt"
	echo "		file on the client machine."
	echo ''
	echo "	onelife get-version:"
	echo "		Shows the version of the game the server is running."
	echo ''
	echo "	onelife start:"
	echo "		This starts the server. Use Ctrl+z to end it gracefully."
	echo ''
	echo "	onelife install:"
	echo "		This will install the server." 
	echo ''
	echo "	onelife uninstall:"
	echo "		Removes the server and all configuation files to free up space."
	echo ''
        echo "	onelife reinstall:" 
	echo "		This is equivalent to using uninstall and then install. It's useful" 
	echo "		if you want to clean out server logs and reset the map."
	echo "		Note: reconfigure is significantly faster if you are only wanting" 
	echo "		to reconfigure the server."
	echo ''
	echo "	onelife reconfigure:"
	echo "		This will reconfigure the server using the walkthrough installation."
       	echo "		It is also the recommened way to update an exising server, but does"
        echo "		wipe the map."	
	echo ''
	echo "	onelife set-password <password>:"
	echo "		Sets the password for the server. Clients connecting will need to"
	echo "		have this password saved in their settings\\serverPassword.ini file."
	echo "		Clients will also need to login using an email or key. The email or"
	echo "		key can be anything, but both fields can not be empty. The server "
	echo "		needs to be restarted for this setting to take affect."
	echo ''
	echo "	onelife get-password:"
	echo "		Reveals the server's password. Unfortunately the server does not"
	echo "		provide any method of storing the password in a hashed form."
	echo "		Its recommended that you use a password for your server that"
	echo "		is not used anywhere else."
	echo ''
	echo "	onelife clear-password:"
	echo "		Clears the server's password. Restart is needed for changes to"
	echo "		take affect."
	echo ''
	echo "	onelife play:"
	echo "		Starts the client."
	echo ''
	echo "Author:"
	echo ''
	echo "Andrew Klassen"
	echo "aklassen80@yahoo.com"
	echo ''	

elif [[ ${1} == set-version ]]; then
	if [[ ! -z "${2}" ]]; then
		echo "${2}" > /opt/onelife/OneLife/server/serverCodeVersionNumber.txt
	else
		echo ''
		echo "What version?"
	        echo "syntax: onelife set-version <version_number>"
		echo ''
	fi
elif [[ ${1} == get-version ]]; then
	cat /opt/onelife/OneLife/server/serverCodeVersionNumber.txt
elif [[ ${1} == install ]]; then
	cd /usr/sbin/onelife_easy_install
	./install
elif [[ ${1} == uninstall ]]; then
	rm -rf /opt/onelife
elif [[ ${1} == reinstall ]]; then
	rm -rf /opt/onelife
	cd /usr/sbin/onelife_easy_install
        ./install
elif [[ ${1} == reconfigure ]]; then
	cd /usr/sbin/onelife_easy_install
        ./install walkthrough
elif [[ ${1} == play ]]; then
	cd /opt/onelife
	/opt/onelife/OneLifeApp
elif [[ ${1} == set-password ]]; then
	if [[ ! -z "${2}" ]]; then
                echo "${2}" > /opt/onelife/OneLife/server/settings/clientPassword.ini
		echo "1" > /opt/onelife/OneLife/server/settings/requireClientPassword.ini
        else
                echo ''
                echo "What should I use as the password?"
                echo "syntax: onelife set-password <password>"
                echo ''
        fi
elif [[ ${1} == get-password ]]; then
	cat /opt/onelife/OneLife/server/settings/clientPassword.ini
elif [[ ${1} == clear-password ]]; then
	echo "0" > /opt/onelife/OneLife/server/settings/requireClientPassword.ini
fi
